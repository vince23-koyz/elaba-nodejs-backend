// test-paymongo-fix.js
const axios = require('axios');

const API_BASE_URL = 'http://localhost:5000/api';

async function testGCashPaymentCreation() {
  console.log('🧪 Testing GCash Payment Creation with Fixed Return URL...\n');

  try {
    const testData = {
      amount: 140,
      description: 'eLaba - Full Service (Walk in)',
      customerInfo: {
        name: 'Vince Mich',
        email: 'vince.mich@example.com',
        phone: '09123456789'
      },
      bookingId: 'test-booking-123'
    };

    console.log('📝 Test data:', JSON.stringify(testData, null, 2));
    console.log('\n🔄 Making request to create GCash payment...\n');

    const response = await axios.post(`${API_BASE_URL}/payments/gcash/create`, testData, {
      headers: {
        'Content-Type': 'application/json'
      },
      timeout: 30000 // 30 second timeout
    });

    console.log('✅ SUCCESS! Payment creation response:');
    console.log('Status:', response.status);
    console.log('Data:', JSON.stringify(response.data, null, 2));

    if (response.data.success && response.data.data.redirectUrl) {
      console.log('\n🎉 Payment creation successful!');
      console.log('💳 Payment Intent ID:', response.data.data.paymentIntentId);
      console.log('🔗 Redirect URL:', response.data.data.redirectUrl);
      console.log('💰 Amount:', response.data.data.amount, 'centavos');
      
      // Test the payment success URL
      console.log('\n🧪 Testing payment success page...');
      try {
        const successResponse = await axios.get('http://localhost:5000/payment/success');
        console.log('✅ Payment success page accessible (Status:', successResponse.status, ')');
      } catch (successError) {
        console.log('❌ Payment success page not accessible:', successError.message);
      }
    } else {
      console.log('⚠️ Payment creation returned success=false or missing data');
    }

  } catch (error) {
    console.error('❌ FAILED! Error testing GCash payment:');
    
    if (error.response) {
      console.error('Response Status:', error.response.status);
      console.error('Response Data:', JSON.stringify(error.response.data, null, 2));
    } else if (error.request) {
      console.error('No response received. Request was made but no response.');
      console.error('Check if backend server is running on port 5000');
    } else {
      console.error('Error Message:', error.message);
    }
  }
}

// Run the test
testGCashPaymentCreation();